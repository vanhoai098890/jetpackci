# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v3
#      - name: Set up Java
#        uses: actions/setup-java@v2
#        with:
#          distribution: "temurin"
#          java-version: 17
#          cache: gradle
#      - name: Change wrapper permissions
#        run: chmod +x ./gradlew
#      - name: Run lint
#        run: ./gradlew lintDebug
#      - name: upload artifact
#        uses: actions/upload-artifact@v4.3.1
#        with:
#          name: index.html
#          path: app/build/reports/lint-results-debug.html



#          phần download artifact này chỉ để down về rồi làm việc cho các job sau
#  hay sao đó chơ không phải ddoowwn xuống máy :D
#      - name: download artifact
#        uses: actions/download-artifact@v4.1.3
#      - name: Display structure of downloaded files
#        run: ls -R


#  unit_test:
#    runs-on: ubuntu-latest
#    needs: lint
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up Java
#        uses: actions/setup-java@v2
#        with:
#          distribution: "temurin"
#          java-version: 17
#          cache: gradle
#      - name: Change wrapper permissions
#        run: chmod +x ./gradlew
#      - name: run unittest
#        run: ./gradlew test
#      - name: upload test report
#        uses: actions/upload-artifact@v4.3.1
#        with:
#          name: testReportIndex.html
#          path: app/build/reports/tests/testDebugUnitTest/index.html

#
#  instrument_test:
#    runs-on: macos-latest
#    needs: unit_test
#    steps:
#      - name: checkout the code
#        uses: actions/checkout@v3
#      - name: Set up Java
#        uses: actions/setup-java@v2
#        with:
#          distribution: "temurin"
#          java-version: 17
#          cache: gradle
#      - name: Change wrapper permissions
#        run: chmod +x ./gradlew
#      - name: run espresso tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 29
#          script: ./gradlew connectedCheck
#      - name: upload test report
#        uses: actions/upload-artifact@v4.3.1
#        with:
#          name: androidTestIndex.html
#          path: app\build\reports\androidTests\connected\debug\index.html

  static_job:
#    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: 17
      - name: Change wrapper permissions
        run: chmod +x ./gradlew
      - name: Sonar scan
        run: ./gradlew sonar

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: static_job
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
#
#      # Runs a single command using the runners shell
#      - name: Run a one-line script
#        run: echo Hello, world!
#
#      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.
